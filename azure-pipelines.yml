trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define these in Azure DevOps variable groups or pipeline variables
  containerRegistry: 'mcppptdevcr.azurecr.io'
  containerName: 'mcp-powerpoint-server'
  resourceGroup: 'rg-mcppptdev'
  containerAppName: 'ca-mcp-powerpoint-server'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build Docker Image'
  jobs:
  - job: Build
    displayName: 'Build and Push'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '22.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
        npm run build
        npm test
      displayName: 'Install dependencies and build'

    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(containerName)'
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: |
          $(tag)
          latest

    - task: Docker@2
      displayName: 'Push Docker image'
      inputs:
        containerRegistry: '$(containerRegistryServiceConnection)'
        repository: '$(containerName)'
        command: 'push'
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: 'Deploy to Azure Container Apps'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Container Apps'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureContainerApps@0
            displayName: 'Deploy to Azure Container Apps'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              containerAppName: '$(containerAppName)'
              resourceGroup: '$(resourceGroup)'
              imageToDeploy: '$(containerRegistry)/$(containerName):$(tag)'
              environmentVariables: |
                NODE_ENV=production
                PORT=3000
